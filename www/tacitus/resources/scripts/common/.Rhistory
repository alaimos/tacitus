source('E:/tacitus/www/tacitus/resources/scripts/common/integrator.common.R')
tmp <- read.selection("E:/alaim/Download/1-mapped-example_selection-data.tsv", "E:/alaim/Download/1-mapped-example_selection-metadata.tsv")
selections <- list(tmp,tmp,tmp,tmp)
prepared.selections <- prepare.selections(selections)
sapply(selections, function (x) (class(x) == "selection"))
length(selections)
sum(sapply(selections, function (x) (class(x) == "selection")))
length(selections) != sum(sapply(selections, function (x) (class(x) == "selection")))
source('E:/tacitus/www/tacitus/resources/scripts/common/integrator.common.R')
prepared.selections <- prepare.selections(selections)
source('E:/tacitus/www/tacitus/resources/scripts/common/integrator.common.R')
prepared.selections <- prepare.selections(selections)
rm(selections)
source('E:/tacitus/www/tacitus/resources/scripts/common/integrator.common.R')
selections <- prepare.selections(tmp,tmp,tmp,tmp)
library("inSilicoMerging", lib.loc="~/R/win-library/3.3")
help("ExpressionSet")
tmp <- merge(selections$expression.matrices)
source('E:/tacitus/www/tacitus/resources/scripts/common/integrator.common.R')
selections <- prepare.selections(tmp,tmp,tmp,tmp)
tmp1 <- merge(selections)
tmp1 <- merge(selections$expression.matrices)
tmp2 <- expression(tmp1)
tmp2 <- exprs(tmp1)
View(tmp2)
source('~/GitHub/tacitus/www/tacitus/resources/scripts/common/integrator.common.R')
tmp <- read.selection("/Users/alaimos/Downloads/example_selection-data.tsv","/Users/alaimos/Downloads/example_selection-metadata.tsv")
selection <- prepare.selections(tmp,tmp,tmp,tmp)
library(inSilicoMerging)
source('~/GitHub/tacitus/www/tacitus/resources/scripts/common/integrator.common.R')
library(inSilicoMerging)
selection <- prepare.selections(tmp,tmp,tmp,tmp)
help("read.table")
source('~/GitHub/tacitus/www/tacitus/resources/scripts/common/integrator.common.R')
tmp <- read.selection("/Users/alaimos/Downloads/example_selection-data.tsv","/Users/alaimos/Downloads/example_selection-metadata.tsv")
selection <- prepare.selections(tmp,tmp,tmp,tmp)
View(tmp$metadata)
matrices <- selection$metadata.matrices
all.metas <- lapply(matrices, function (x) (colnames(x)))
all.metas
all.metas <- Reduce(union, lapply(matrices, function (x) (colnames(x))))
all.metas
n.samples <- sum(sapply(matrices, nrow))
n.samples
nrow(matrices[[1]])
55*4
sapply(matrices, function (x, col) (ifelse(test=(col %in% colnames(x)), yes=(x[,col]),no=(rep(NA, nrow(x))))), all.metas[1])
all.metas[1]
lapply(matrices, function (x, col) (ifelse(test=(col %in% colnames(x)), yes=(x[,col]),no=(rep(NA, nrow(x))))), all.metas[1])
sapply(matrices, function (x, col) {
if (col %in% colnames(x)) {
return (x[,col])
} else {
return (rep(NA, nrow(x)))
}
}, all.metas[1])
lapply(matrices, function (x, col) {
if (col %in% colnames(x)) {
return (x[,col])
} else {
return (rep(NA, nrow(x)))
}
}, all.metas[1])
Reduce(c, lapply(matrices, function (x, col) {
if (col %in% colnames(x)) {
return (x[,col])
} else {
return (rep(NA, nrow(x)))
}
}, all.metas[1]))
tmp <-     lapply(all.metas, function (col) {
Reduce(c, lapply(matrices, function (x, col) {
if (col %in% colnames(x)) {
return (x[,col])
} else {
return (rep(NA, nrow(x)))
}
}, col))
})
help(lapply)
tmp <-     lapply(all.metas, function (col) {
Reduce(c, lapply(matrices, function (x, col) {
if (col %in% colnames(x)) {
return (x[,col])
} else {
return (rep(NA, nrow(x)))
}
}, col))
}, USE.NAMES = TRUE)
tmp <-     lapply(all.metas, function (col) {
Reduce(c, lapply(matrices, function (x, col) {
if (col %in% colnames(x)) {
return (x[,col])
} else {
return (rep(NA, nrow(x)))
}
}, col))
})
names(tmp) <- all.metas
View(tmp)
tmp1 <- data.frame(tmp)
View(tmp1)
View(tmp1)
tmp1 <- data.frame(tmp, check.names = TRUE)
View(tmp1)
tmp1 <- data.frame(tmp, check.names=FALSE)
source('~/GitHub/tacitus/www/tacitus/resources/scripts/common/integrator.common.R')
meta <- merge.metadata(selection)
View(meta)
data <- read.delim(file="/Users/alaimos/Downloads/example_selection-data.tsv", header=FALSE, stringsAsFactors=FALSE)
View(data)
tmp <- read.selection("/Users/alaimos/Downloads/example_selection-data.tsv","/Users/alaimos/Downloads/example_selection-metadata.tsv")
source('~/GitHub/tacitus/www/tacitus/resources/scripts/common/integrator.common.R')
tmp <- read.selection("/Users/alaimos/Downloads/example_selection-data.tsv","/Users/alaimos/Downloads/example_selection-metadata.tsv")
selection <- prepare.selections(tmp,tmp,tmp,tmp)
meta <- merge.metadata(selection)
View(meta)
help("merge")
merged <- merge(selection$expression.matrices, method=method)
method<-"NONE"
merged <- merge(selection$expression.matrices, method=method)
rm(merged)
merged.eset <- merge(selection$expression.matrices, method=method)
merged.mtx  <- exprs(merged.eset)
View(merged.mtx)
View(tmp$data)
View(tmp$data$expression.matrix)
help("format")
View(format(merged.mtx, digits=12, scientific=FALSE))
data <- read.delim(file="/Users/alaimos/Downloads/example_selection-data.tsv", header=FALSE, stringsAsFactors=FALSE)
dim(data)
dim(tmp$data$expression.matrix)
source('~/GitHub/tacitus/www/tacitus/resources/scripts/common/integrator.common.R')
data <- merge.data(selection)
View(data)
View(data[1:100])
View(data[1:100,1:100])
