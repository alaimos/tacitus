{"version":3,"sources":["ajax_setup.js","dataTables-ellipsis.js","theme.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["$.ajaxSetup({\n    headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    }\n});\n","/**\n * This data rendering helper method can be useful for cases where you have\n * potentially large data strings to be shown in a column that is restricted by\n * width. The data for the column is still fully searchable and sortable, but if\n * it is longer than a give number of characters, it will be truncated and\n * shown with ellipsis. A browser provided tooltip will show the full string\n * to the end user on mouse hover of the cell.\n *\n * This function should be used with the `dt-init columns.render` configuration\n * option of DataTables.\n *\n * It accepts three parameters:\n *\n * 1. `-type integer` - The number of characters to restrict the displayed data\n *    to.\n * 2. `-type boolean` (optional - default `false`) - Indicate if the truncation\n *    of the string should not occur in the middle of a word (`true`) or if it\n *    can (`false`). This can allow the display of strings to look nicer, at the\n *    expense of showing less characters.\n * 2. `-type boolean` (optional - default `false`) - Escape HTML entities\n *    (`true`) or not (`false` - default).\n *\n *  @name ellipsis\n *  @summary Restrict output data to a particular length, showing anything\n *      longer with ellipsis and a browser provided tooltip on hover.\n *  @author [Allan Jardine](http://datatables.net)\n *  @requires DataTables 1.10+\n *\n * @returns {Number} Calculated average\n *\n *  @example\n *    // Restrict a column to 17 characters, don't split words\n *    $('#example').DataTable( {\n *      columnDefs: [ {\n *        targets: 1,\n *        render: $.fn.dataTable.render.ellipsis( 17, true )\n *      } ]\n *    } );\n *\n *  @example\n *    // Restrict a column to 10 characters, do split words\n *    $('#example').DataTable( {\n *      columnDefs: [ {\n *        targets: 2,\n *        render: $.fn.dataTable.render.ellipsis( 10 )\n *      } ]\n *    } );\n */\n\njQuery.fn.dataTable.render.ellipsis = function ( cutoff, wordbreak, escapeHtml ) {\n\tvar esc = function ( t ) {\n\t\treturn t\n\t\t\t.replace( /&/g, '&amp;' )\n\t\t\t.replace( /</g, '&lt;' )\n\t\t\t.replace( />/g, '&gt;' )\n\t\t\t.replace( /\"/g, '&quot;' );\n\t};\n\n\treturn function ( d, type, row ) {\n\t\t// Order, search and type get the original data\n\t\tif ( type !== 'display' ) {\n\t\t\treturn d;\n\t\t}\n\n\t\tif ( typeof d !== 'number' && typeof d !== 'string' ) {\n\t\t\treturn d;\n\t\t}\n\n\t\td = d.toString(); // cast numbers\n\n\t\tif ( d.length <= cutoff ) {\n\t\t\treturn d;\n\t\t}\n\n\t\tvar shortened = d.substr(0, cutoff-1);\n\n\t\t// Find the last white space character in the string\n\t\tif ( wordbreak ) {\n\t\t\tshortened = shortened.replace(/\\s([^\\s]*)$/, '');\n\t\t}\n\n\t\t// Protect against uncontrolled HTML input\n\t\tif ( escapeHtml ) {\n\t\t\tshortened = esc( shortened );\n\t\t}\n\n\t\treturn '<span class=\"ellipsis\" title=\"'+esc(d)+'\">'+shortened+'&#8230;</span>';\n\t};\n};\n","$(function () {\n\n    $('#side-menu').metisMenu();\n\n});\n\n//Loads the correct sidebar on window load,\n//collapses the sidebar on window resize.\n// Sets the min-height of #page-wrapper to window size\n$(function () {\n    $(window).bind(\"load resize\", function () {\n        var topOffset = 50;\n        var width = (this.window.innerWidth > 0) ? this.window.innerWidth : this.screen.width;\n        if (width < 768) {\n            $('div.navbar-collapse').addClass('collapse');\n            topOffset = 100; // 2-row-menu\n        } else {\n            $('div.navbar-collapse').removeClass('collapse');\n        }\n\n        var height = ((this.window.innerHeight > 0) ? this.window.innerHeight : this.screen.height) - 1;\n        height = height - topOffset;\n        if (height < 1) height = 1;\n        if (height > topOffset) {\n            $(\"#page-wrapper\").css(\"min-height\", (height) + \"px\");\n        }\n    });\n\n    var url = window.location;\n    // var element = $('ul.nav a').filter(function() {\n    //     return this.href == url;\n    // }).addClass('active').parent().parent().addClass('in').parent();\n    var element = $('ul.nav a').filter(function () {\n        return this.href == url;\n    }).addClass('active').parent();\n\n    while (true) {\n        if (element.is('li')) {\n            element = element.parent().addClass('in').parent();\n        } else {\n            break;\n        }\n    }\n});\n"],"sourceRoot":"/source/"}